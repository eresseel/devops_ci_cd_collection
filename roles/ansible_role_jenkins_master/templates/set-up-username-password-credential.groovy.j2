import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.domains.*
import com.cloudbees.plugins.credentials.impl.*
import hudson.util.Secret

def credentialId = "{{ item.id }}"
def username = "{{ item.username }}"
def password = "{{ item.password }}"
def description = "{{ item.description }}"

def addUsernamePasswordCredential(String id, String username, String password, String description) {
  def newCredential = (Credentials) new UsernamePasswordCredentialsImpl(
    CredentialsScope.GLOBAL,
    id,
    description,
    username,
    password
  )

  def existingCredentials = com.cloudbees.plugins.credentials.CredentialsProvider.lookupCredentials(
    com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl.class,
    jenkins.model.Jenkins.instance
  )
  def credentialIdMap = existingCredentials.groupBy { it.id }

  if (credentialIdMap.containsKey(id)) {
    def existingCredential = credentialIdMap.get(id)[0]
    if (existingCredential.getUsername() != username || Secret.toString(existingCredential.getPassword()) != password) {
      def updatedCredential = (Credentials) new UsernamePasswordCredentialsImpl(
        CredentialsScope.GLOBAL,
        existingCredential.getId(),
        existingCredential.getDescription(),
        existingCredential.getUsername(),
        Secret.toString(existingCredential.getPassword())
      )
      SystemCredentialsProvider.getInstance().getStore().updateCredentials(Domain.global(), updatedCredential, newCredential)
      println "Changed username password credentials"
    }
  } else {
    SystemCredentialsProvider.getInstance().getStore().addCredentials(Domain.global(), newCredential)
    println "Changed username password credentials"
  }
}

addUsernamePasswordCredential(credentialId, username, password, description)